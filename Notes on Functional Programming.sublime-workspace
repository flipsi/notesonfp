{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"scope",
				"scopeGID"
			],
			[
				"subq",
				"subqueryScope"
			],
			[
				"loc",
				"local"
			],
			[
				"scop",
				"scopeGID"
			],
			[
				"tellS",
				"tellScope"
			],
			[
				"sco",
				"scope"
			],
			[
				"obs",
				"observations"
			],
			[
				"create",
				"createStmts"
			],
			[
				"observ",
				"observations"
			],
			[
				"Se",
				"Sequences"
			],
			[
				"ask",
				"asks"
			],
			[
				"give",
				"givenNr"
			],
			[
				"expli",
				"explicitAlias"
			],
			[
				"no",
				"nomerge"
			],
			[
				"set",
				"setAlias"
			],
			[
				"row",
				"rowtype"
			],
			[
				"Tab",
				"TableRef"
			],
			[
				"new",
				"newScope"
			],
			[
				"ColR",
				"ColRef"
			],
			[
				"obsT",
				"obsTbs"
			],
			[
				"Col",
				"ColRef"
			],
			[
				"Obs",
				"ObsLabel"
			],
			[
				"Tabl",
				"TableExpression"
			],
			[
				"Agg",
				"AggCallE"
			],
			[
				"Expr",
				"ExprI"
			],
			[
				"cat",
				"catMaybes"
			],
			[
				"par",
				"params"
			],
			[
				"merg",
				"mergeQuery"
			],
			[
				"Subs",
				"Substitution"
			],
			[
				"Ta",
				"Table"
			],
			[
				"grou",
				"groupBy"
			],
			[
				"rowVar",
				"rowVarCols"
			],
			[
				"varS",
				"varScopeLevel"
			],
			[
				"Table",
				"TableRef"
			],
			[
				"from",
				"fromJust"
			],
			[
				"Comm",
				"CommonTableExpr"
			],
			[
				"Com",
				"CommonTableExpr"
			],
			[
				"Habi",
				"HabitatMonad"
			],
			[
				"Vis",
				"VisitorFunc"
			],
			[
				"Visi",
				"VisitorFuncs"
			],
			[
				"Visit",
				"VisitorF"
			],
			[
				"Free",
				"FreeVars"
			],
			[
				"Vi",
				"VisitF"
			],
			[
				"Ex",
				"Expr"
			],
			[
				"Sel",
				"Select"
			],
			[
				"VisitF",
				"VisitFunctions"
			],
			[
				"visi",
				"visitf"
			],
			[
				"bind",
				"bindAndVisitM"
			],
			[
				"free",
				"freeVars"
			],
			[
				"Sele",
				"Select"
			],
			[
				"Exp",
				"Expr"
			],
			[
				"node",
				"nodeVisit"
			],
			[
				"Node",
				"NodeVisitor"
			],
			[
				"get",
				"getAlias"
			],
			[
				"expr",
				"exprO"
			],
			[
				"No",
				"Nothing"
			],
			[
				"exp",
				"exprIs"
			],
			[
				"loca",
				"localizeVar"
			],
			[
				"local",
				"localize"
			],
			[
				"Group",
				"groupBy"
			],
			[
				"depe",
				"dependenciesT"
			],
			[
				"vari",
				"varIsOAE"
			],
			[
				"im",
				"impliedRowVarsT"
			],
			[
				"param",
				"paramsT"
			],
			[
				"para",
				"paramsT"
			],
			[
				"cont",
				"contextT"
			],
			[
				"dep",
				"dependenciesT"
			],
			[
				"regi",
				"registerVarTypes"
			],
			[
				"may",
				"mayReferToPrevious"
			],
			[
				"ma",
				"mayReferToPrevious"
			],
			[
				"test",
				"testCase"
			],
			[
				"implied",
				"impliedRowVars"
			],
			[
				"conca",
				"concatMap"
			],
			[
				"scopGro",
				"scopeGroupingCols"
			],
			[
				"Var",
				"Variable"
			],
			[
				"loo",
				"lookupVar"
			],
			[
				"acti",
				"activeScope"
			],
			[
				"base",
				"baseType"
			],
			[
				"typ",
				"typeOf"
			],
			[
				"gen",
				"generateRID"
			],
			[
				"contex",
				"contextCols"
			],
			[
				"imp",
				"impliedRowVars"
			],
			[
				"regists",
				"registerVarTypes"
			],
			[
				"map",
				"mapFst"
			],
			[
				"oge",
				"oges"
			],
			[
				"var",
				"varId"
			],
			[
				"tick",
				"tickSeq"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/Cabal.sublime-build",
	"command_palette":
	{
		"height": 96.0,
		"selected_items":
		[
			[
				"my se",
				"My Preferences (Settings)"
			],
			[
				"cl al",
				"File: Close All"
			],
			[
				"Snippet: ",
				"Snippet: Comment"
			],
			[
				"comm",
				"Toggle Comment"
			],
			[
				"side",
				"View: Toggle Side Bar"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/flip/daten/studium/functional-programming/lecturetex/fp.tex",
		"/home/flip/daten/studium/functional-programming/lecturetex/chapter03-values-and-types.tex",
		"/home/flip/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/flip/daten/studium/functional-programming/lecturetex/Notes on Functional Programming.sublime-project",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/recursive-example.sql",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/AstT.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/nonrecursive-example.sql",
		"/home/beni/.config/sublime-text-2/Packages/User/SFW.sublime-snippet",
		"/home/flip/daten/studium/bachelorthesis/Habitat/src/Habitat/AstVisitor.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/TypeInference.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/Main.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/examples/mainexample.sql",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/union-scopes.sql",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/Naming.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/recursive-idea2.sql",
		"/home/beni/Habitat/recursive-idea2.sql",
		"/home/beni/Habitat/recursive-idea.sql",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/Render.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/habitat.cabal",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/Parser.y",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/Lexer.x",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/AstVisitor.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/NewVisitor.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/NewVisitorTest3.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/NewVisitor3.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/NewVisitorTest",
		"/home/beni/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/NewVisitorTest.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Habitat/NewVisitorTest2.hs",
		"/home/beni/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/tmp/test.hs",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/array_out/arrayout.c",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/Test.hs",
		"/home/beni/.config/sublime-text-2/Packages/User/Cabal.sublime-build",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/dist/build/habitat/habitat-tmp/Habitat/SqlTypeSignatures.hi",
		"/home/beni/Habitat/examples/CREATE TABLE asd (obs INT);",
		"/home/beni/Habitat/examples/SELECT (SELECT sum({{a+c}}) FROM s), (SELECT sum({",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/examples/uncorrelated-nesting.sql",
		"/home/beni/Dokumente/Informatik/Habitat-on-PostgreSQL-Diplom/text/thesis/chapters/50-merging.tex",
		"/home/beni/.config/sublime-text-2/Packages/User/Default (Linux).sublime-keymap",
		"/home/beni/Dokumente/datenbanksysteme/Habitat/src/    Parse error"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"tell",
			"newScope",
			"cteNext",
			"ctesStep",
			"reCte",
			"TID",
			"rid1.2.rec",
			"extract",
			"bindVa",
			"On",
			"inferCte",
			"bindCommonTableExpression",
			"inferCte",
			"setAlias",
			"ctes",
			"ctesT",
			"inferCte",
			"fetchBaseTable",
			"cteTypes",
			"'",
			"Observation",
			"Observations",
			"newObs",
			"Observations",
			"let",
			"mapfst",
			"semi",
			"renaming",
			"renamingDefault",
			"renaming",
			"Renaming",
			"renaming",
			"varScopeLe",
			"observations",
			"ident",
			"transform",
			"Transformation",
			"tableRe",
			"cols",
			"addRIDgenCol",
			"getrowVars",
			"rowvar",
			"rowvars",
			"cannot cra",
			"groupBy",
			"rowVars",
			"unfoldType",
			"unfoldStars",
			"rowVar",
			"getRowVars",
			"newScope",
			"Maybe Int)",
			"Maybe Int\\)",
			"Maybe Int",
			"Maybe",
			"Maybe Int",
			"Maybe",
			"Maybe Int",
			" (",
			"read",
			"createSc",
			"createTableVa",
			"newObs",
			"' ",
			"Obs(SelItem|Select|Expr|TableRef)",
			"Obs",
			"FConst",
			"'\\}\\}'",
			"'\\{\\{'",
			"\\{\\{",
			"visit",
			"bindandvi",
			"visit",
			"f",
			"traverse v\\$\\$",
			"mapM v\\$\\$",
			"tM v\\$\\$",
			"f ",
			"F",
			"f",
			"\\_ ",
			"visit'",
			"visit",
			"VisitF",
			"app",
			" ",
			"v ",
			"v",
			"\\_ ",
			"small",
			"zoom",
			"plus",
			"TableExpres",
			"fixme",
			"varScopeLevel",
			"registerFirstRelated",
			"selItem",
			"label",
			"fixme",
			"funccallE",
			"fixme",
			"orderby",
			"Scopeconte",
			"addGID",
			"scopeGID",
			"rowwiseE",
			"rowwiseEntered",
			"addRIDgenColumn",
			"ridGeneratorColumn",
			"n ",
			"ridGeneratorColumn",
			"ridGeneratorCol",
			"new_rid",
			"generateRID",
			"addVarToFirstRelated",
			"freeVarsInScope",
			"AggOp",
			"rowwi",
			"prepa",
			"Transforma",
			"prepare",
			"dependencies",
			"dependenciesT",
			"dependencies",
			"dependen",
			"paramsT",
			"prepareO",
			"correlated"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"tid",
			"\"",
			"",
			"ObsEnd",
			"ObsBeg",
			"",
			"visit",
			"visit'",
			"ApplyVisitorF",
			"($$$$)",
			"($$)",
			", ",
			"",
			"transform",
			"newObs",
			"et",
			"\\n  "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 418.0
	},
	"output.haskell_sublime_load":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"val",
				"chapter03-values-and-types.tex"
			],
			[
				"te",
				"fp.tex"
			],
			[
				"sub",
				"Notes on Functional Programming.sublime-project"
			],
			[
				"rcur",
				"recursive-example.sql"
			],
			[
				"main",
				"examples/mainexample.sql"
			],
			[
				"ast",
				"src/Habitat/AstT.hs"
			],
			[
				"namin",
				"src/Habitat/Naming.hs"
			],
			[
				"habiat",
				"src/Habitat.hs"
			],
			[
				"astt",
				"src/Habitat/AstT.hs"
			],
			[
				"typei",
				"src/Habitat/TypeInference.hs"
			],
			[
				"recurs",
				"recursive-idea2.sql"
			],
			[
				"ha",
				"src/Habitat.hs"
			],
			[
				"render",
				"src/Habitat/Render.hs"
			],
			[
				"at",
				"src/Habitat/AstT.hs"
			],
			[
				"hab",
				"src/Habitat.hs"
			],
			[
				"cabal",
				"habitat.cabal"
			],
			[
				"typeinfe",
				"src/Habitat/TypeInference.hs"
			],
			[
				"maine",
				"examples/mainexample.sql"
			],
			[
				"naming",
				"src/Habitat/Naming.hs"
			],
			[
				"type",
				"src/Habitat/TypeInference.hs"
			],
			[
				"rende",
				"src/Habitat/Render.hs"
			],
			[
				"astv",
				"src/Habitat/AstVisitor.hs"
			],
			[
				"as",
				"src/Habitat/AstT.hs"
			],
			[
				"lex",
				"src/Habitat/Lexer.x"
			],
			[
				"newv",
				"src/Habitat/NewVisitor.hs"
			],
			[
				"new",
				"src/Habitat/NewVisitorTest"
			],
			[
				"test",
				"src/Test.hs"
			],
			[
				"visi",
				"src/Habitat/AstVisitor.hs"
			],
			[
				"",
				"SELECT (SELECT sum({{a+c}}) FROM s), (SELECT sum({"
			],
			[
				"nami",
				"src/Habitat/Naming.hs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"ha",
				"/home/flip/daten/studium/bachelorthesis/Habitat/habitat.sublime-project"
			],
			[
				"",
				"/home/flip/daten/studium/functional-programming/lecturetex/Notes on Functional Programming.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 209.0,
	"status_bar_visible": true
}
